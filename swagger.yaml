swagger: "2.0"
info:
  description: NodeJS Robust API | Node.js Rest API doc
  version: "1.0.0"
  title: Node Rest API documentation
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: boguhestephane97@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost:3002
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API pour connecter un utilisateur
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Utilisateur connecté avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ Invalide
        "500":
          description: Internal Server Error
  /user/register:
    post:
      tags:
        - User Module
      summary: Register
      description: API pour enregistrer un utilisateur
      parameters:
        - in: body
          name: body
          description: Register Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Utilisateur crée avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ Invalide
        "500":
          description: Internal Server Error
  /product:
    post:
      security:
        - Bearer: []
      tags:
        - Product Module
      summary: Créer un nouveau Product
      description: API pour la création d'un produit
      parameters:
        - in: body
          name: body
          description: Create Product Payload
          required: true
          schema:
            $ref: "#/definitions/Product"
      produces:
        - application/json
      responses:
        "200":
          description: Produit crée avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ Invalide
        "401":
          description: Non autorisé
        "500":
          description: Internal Server Error
    get:
      security:
        - Bearer: []
      tags:
        - Product Module
      summary: Récupérer tous les produits
      description: API pour récupérer tous les produits disponibles dans la base de données. Dispose d'une option de pagination.
      parameters:
        - name: skip
          in: query
          description: No de la page des produits à récupérer. Par défaut 0.
          type: number
          required: false
        - name: limit
          in: query
          description: Nombre de produits à récupérer pour une page. Par défaut 4.
          type: number
          required: false
      produces:
        - application/json
      responses:
        "200":
          description: Produits récupérés avec succès
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ Invalide
        "500":
          description: Internal Server Error
  "/product/{id}":
    get:
      security:
        - Bearer: []
      tags:
        - Product Module
      summary: Détails d'un produit
      description: Récupérer les détails d'un produit.
      parameters:
        - name: id
          in: path
          description: Id du produit. C'est un identifiant unique fourni par MongoDB.
          type: string
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: produit récupéré avec succès !
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ Invalide | id invalide
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Product Module
      summary: modifier un produit
      description: Mettre à jour un produit
      parameters:
        - name: id
          in: path
          description: Id du produit. C'est un identifiant unique fourni par MongoDB.
          type: string
          required: true
        - in: body
          name: body
          description: Update Product Payload
          required: true
          schema:
            $ref: "#/definitions/Product"
      produces:
        - application/json
      responses:
        "200":
          description: produit mis à jour avec succès !
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Champ invalide | id invalide
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Product Module
      summary: Supprimer un produit
      description: Suppression d'un produit de la database.
      parameters:
        - name: id
          in: path
          description: Id du produit. C'est un identifiant unique fourni par MongoDB.
          type: string
          required: true
      produces:
        - application/json
      responses:
        204:
          description: produit supprimé avec succès !
        "400":
          description: Champs invalide | id invalide
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: email de l'utilisateur
      username:
        type: string
        description: username de l'utilisateur
      password:
        type: string
        description: password of the user
  Login:
    properties:
      email:
        type: string
        description: email de l'utilisateur
      password:
        type: string
        description: password of the user
  Product:
    properties:
      nom:
        type: string
        description: nom du produit
      prix:
        type: number
        description: prix du produit
      marque:
        type: string
        description: marque product
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
